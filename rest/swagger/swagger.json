{
  "openapi": "3.0.3",
  "info": {
    "title": "Ecommerce",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "REST API"
        ],
        "summary": "Signup User",
        "description": "Endpoint for user signup.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponse"
                }
              }
            }
          },
          "400": {
            "description": "User account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestSignUpResponse"
                }
              }
            }
          },
          "500": {
            "description": "User account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorSignUpResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "Success! OTP sent to your email"
          },
          "message": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "xzzxcx"
              },
              "email": {
                "type": "string",
                "example": "ashasjdjhasj@gmail.com"
              },
              "password": {
                "type": "string",
                "example": "xcftghbnujk"
              }
            }
          },
          "Status": {
            "type": "string",
            "example": true
          }
        }
      },
      "BadRequestSignUpResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "User Exists"
          },
          "Status": {
            "type": "string",
            "example": false
          }
        }
      },
      "ServerErrorSignUpResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "Failed to insert user db"
          },
          "Status": {
            "type": "string",
            "example": false
          }
        }
      },
      "newUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Anik Hasan"
          },
          "email": {
            "type": "string",
            "example": "mailto:anikhasan1@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "anikHasan777777",
            "description": "Should have atleast 8 characters"
          }
        }
      }
    },
    "parameters": {
      "nameParam": {
        "in": "query",
        "name": "username",
        "description": "username must contain alphabate only , cann't contain space or number",
        "schema": {
          "type": "string"
        }
      },
      "emailParam": {
        "in": "query",
        "name": "Email",
        "description": "email must be unique and OTP verification requried",
        "schema": {
          "type": "string",
          "format": "email"
        }
      },
      "passParam": {
        "in": "query",
        "name": "Password",
        "description": "minimum len 8 maximum 20 , validation requried",
        "schema": {
          "type": "string",
          "format": "pass"
        }
      }
    }
  }
}